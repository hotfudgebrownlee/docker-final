#testing lol

#
# This docker-compose file starts and runs:
# * A 3-node kafka cluster
# * A 1-zookeeper ensemble
# * Schema Registry
# * Kafka REST Proxy
# * Kafka Connect
#

version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    ports:
    - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    ports:
    - "19092:19092"
    environment:
      KAFKA_BROKER_ID: "0"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      #Fix these with edjumacated shtick later

      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092"

      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
    - "zookeeper"

  redis:
    image: redis:6.0.6
    ports:
    - "6379:6379"

#COME BACK TO SET UP KAFKA PORTION AND REDIS
  #Lists the name of the server.
  stedi: 
    #Creates the image of the server.         
    image: scmurdock/stedi
    #Defines the port number of the server to be used on the WebApplication.   
    ports:
    - "4567:4567"
    #Creates the environmental variables of the server that defines the behavior of the server.  
    environment:
    #References the redis server because stedi is dependent on this server      
      REDIS_HOST: "redis"
    #Lists the port number of the redis server so that it can find the redis server.
      REDIS_PORT: "6379"
          #the next three variables are guessed *thumbs up*
      REDIS_DB: "0"
      KAFKA_BROKER: "kafka:19092"
      KAFKA_RISK_TOPIC: "customer-risk-topic"
    depends_on:
    - "kafka"
    - "redis"